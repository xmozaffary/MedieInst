2-nov
    Repatition
    DOM - document Objeect model = vad vi ser i webbläsaren.
        I js kommer vi åt DOM --> document 
        document.getEelemeentById("något ID");
            Söker eefter eett html-element
            getElementById() är en funktion. och har een return
        document.createEelement("tag namn");
            skapar i detta fall en tag

        const myTag = document.getEelemeentById("något ID");
            nu finns resultatet av sökning i myTag variable
    
    Mer om DOM
        Det finns fler sätt att hitta eleement:
            document.getElementById();
            document.getElementByClass();
            document.querySelector(".red>span"/ someId);

            
        <input id="fName"/>
            Specialla att hanteera i js
        
            const myInput = document.getElementById("fName");
            innreHtml inte fungerar på input
            man kan använda value
            myInput.value("lorem");
                detta kommer att sätta texten i textruttan till lorem
            const textInput = myInput.value;
                lagrar teexten i textruttan i valiable textInput
            
            
    Händelser
        clicka
        Scroll
        hover
        rörelse av markör

        onload
        vi viil få kontroll på händelser med hjälp av funktion.

        <button onClick="Här skriver det funtionen som ska hända/köras">Spara</button> detta gör vi html file
            man registerar händelser med on dom beetyder vid
            nu ska glömma detta sättet och istället kommer vi skriva js, varför?
                ofta vet vi inte vilka html tagar ska vi ha,därför skppar vi knapparna i js
                Hur gör man det?
                    const SaveButton = documeent.createEleemeent("button");
                    saveButton.className("btn");
                    saveButton.id = "save";
                    saveButton.innerHtml = "spara";

                    saveButton.addEventListener("click", namn på funtion utan paranes--> för att om man skriver funktion med parantees så körs funktion. alltså vi bara säger så heter funktionen); 
                        man ger 2 st argument
                        andra argument ska vara en funtion
                            alltså amn anropar funktion i een annan funktion
                    
                        addEventListener - en funktion som kopplar ihop en händelse meed våra funktioner.
                            syntax:
                            addEventListener(event: string, callback: fn). void; // viod betyeder att den ger inget till oss

                            exempel:
                                saveButton.addEventlistener("mouseenter", paintItBlue);
                                saveButton.addEventlistener("mouseleave", removeBlue);
                                gå genom alla händeelser och kolla vad de gör

                                vad är variable e i event?
                                    e är själva hämdeelsen.
                                        e.target => saveButton. sättet att komma åt saveButton
                                        om e.target är vår kanppa så ska jag kunna ändra den
                                            e.target =
                                            saveButton =
                                            <button>Spara</button>

                        
                            saveButton.addEventListener("click",hand );

                            const hand =(e) => {
                                _____
                            }

                            man kan skriva istället 
                            saveButton.addEventListener("click", (e) =>{

                            } )
                            (e) =>{ } --> dette heter anonym function
                            nu kan man intee återanvända nån annan ställe.
    Vite:
        